# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-03-27 01:52
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import yighub.models_base


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('event_time', models.DateField(blank=True, null=True)),
                ('count_view', models.PositiveIntegerField(default=0)),
                ('count_photo', models.PositiveIntegerField(default=0)),
                ('thumbnail', models.PositiveIntegerField(blank=True, null=True)),
                ('newest_time', models.DateTimeField(blank=True, null=True)),
                ('permission_reading', models.CharField(choices=[('non', 'non-member'), ('pre', 'preliminary member'), ('asc', 'associate member'), ('reg', 'regular member'), ('exe', 'executive member'), ('mgr', 'website manager')], default='pre', max_length=3)),
                ('permission_writing', models.CharField(choices=[('non', 'non-member'), ('pre', 'preliminary member'), ('asc', 'associate member'), ('reg', 'regular member'), ('exe', 'executive member'), ('mgr', 'website manager')], default='pre', max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('order', models.PositiveIntegerField(default=1)),
                ('count_entry', models.PositiveIntegerField(default=0)),
                ('newest_entry', models.PositiveIntegerField(blank=True, null=True)),
                ('newest_time', models.DateTimeField(blank=True, null=True)),
                ('permission_reading', models.CharField(choices=[('non', 'non-member'), ('pre', 'preliminary member'), ('asc', 'associate member'), ('reg', 'regular member'), ('exe', 'executive member'), ('mgr', 'website manager')], default='non', max_length=3)),
                ('permission_writing', models.CharField(choices=[('non', 'non-member'), ('pre', 'preliminary member'), ('asc', 'associate member'), ('reg', 'regular member'), ('exe', 'executive member'), ('mgr', 'website manager')], default='non', max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('time_created', models.DateTimeField()),
                ('count_recommendation', models.PositiveIntegerField(default=0)),
                ('arrangement', models.PositiveIntegerField()),
                ('depth', models.PositiveSmallIntegerField(default=0)),
                ('parent', models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('time_created', models.DateTimeField()),
                ('time_last_modified', models.DateTimeField()),
                ('count_comment', models.PositiveIntegerField(default=0)),
                ('count_view', models.PositiveIntegerField(default=0)),
                ('count_recommendation', models.PositiveIntegerField(default=0)),
                ('notice', models.BooleanField(default=False)),
                ('arrangement', models.PositiveIntegerField()),
                ('depth', models.PositiveSmallIntegerField(default=0)),
                ('parent', models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('file', models.FileField(upload_to=yighub.models_base.upload_file_path)),
                ('hit', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Letter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('read', models.BooleanField(default=False)),
                ('time_created', models.DateTimeField()),
                ('file', models.FileField(blank=True, upload_to='letter_files/%Y/%m/%d')),
                ('filename', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Memo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('memo', models.CharField(max_length=200)),
                ('time_created', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='yighub/albums/%Y/%m/%d')),
                ('description', models.TextField(blank=True)),
                ('time_created', models.DateTimeField()),
                ('time_last_modified', models.DateTimeField()),
                ('count_recommendation', models.PositiveIntegerField(default=0)),
                ('count_comment', models.PositiveIntegerField(default=0)),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='yighub.Album')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Thumbnail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('thumbnail', models.ImageField(upload_to=yighub.models_base.upload_thumbnail_path)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=30)),
                ('password', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=30)),
                ('date_joined', models.DateField()),
                ('last_login', models.DateTimeField()),
                ('birthday', models.DateField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('sns', models.CharField(blank=True, max_length=200)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('ordinal', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('level', models.CharField(choices=[('non', 'non-member'), ('pre', 'preliminary member'), ('asc', 'associate member'), ('reg', 'regular member'), ('exe', 'executive member'), ('mgr', 'website manager')], max_length=3)),
                ('career1', models.CharField(blank=True, max_length=200)),
                ('career2', models.CharField(blank=True, max_length=200)),
                ('career3', models.CharField(blank=True, max_length=200)),
                ('career4', models.CharField(blank=True, max_length=200)),
                ('career5', models.CharField(blank=True, max_length=200)),
                ('self_introduction', models.TextField(blank=True)),
                ('point', models.PositiveIntegerField(default=0)),
                ('profile', models.ImageField(blank=True, upload_to=yighub.models_base.upload_profile_path)),
                ('avatar', models.ImageField(blank=True, upload_to=yighub.models_base.upload_avatar_path)),
            ],
        ),
        migrations.CreateModel(
            name='BulletinBoard',
            fields=[
                ('board_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='yighub.Board')),
            ],
            bases=('yighub.board',),
        ),
        migrations.CreateModel(
            name='BulletinComment',
            fields=[
                ('comment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='yighub.Comment')),
            ],
            bases=('yighub.comment',),
        ),
        migrations.CreateModel(
            name='BulletinEntry',
            fields=[
                ('entry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='yighub.Entry')),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yighub.BulletinBoard')),
            ],
            bases=('yighub.entry',),
        ),
        migrations.CreateModel(
            name='BulletinFile',
            fields=[
                ('file_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='yighub.File')),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='yighub.BulletinEntry')),
            ],
            bases=('yighub.file',),
        ),
        migrations.CreateModel(
            name='BulletinThumbnail',
            fields=[
                ('thumbnail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='yighub.Thumbnail')),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thumbnails', to='yighub.BulletinEntry')),
            ],
            bases=('yighub.thumbnail',),
        ),
        migrations.CreateModel(
            name='PhotoComment',
            fields=[
                ('comment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='yighub.Comment')),
            ],
            bases=('yighub.comment',),
        ),
        migrations.CreateModel(
            name='PublicBoard',
            fields=[
                ('board_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='yighub.Board')),
            ],
            bases=('yighub.board',),
        ),
        migrations.CreateModel(
            name='PublicComment',
            fields=[
                ('comment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='yighub.Comment')),
            ],
            bases=('yighub.comment',),
        ),
        migrations.CreateModel(
            name='PublicEntry',
            fields=[
                ('entry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='yighub.Entry')),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yighub.PublicBoard')),
            ],
            bases=('yighub.entry',),
        ),
        migrations.CreateModel(
            name='PublicFile',
            fields=[
                ('file_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='yighub.File')),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='yighub.PublicEntry')),
            ],
            bases=('yighub.file',),
        ),
        migrations.CreateModel(
            name='PublicThumbnail',
            fields=[
                ('thumbnail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='yighub.Thumbnail')),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thumbnails', to='yighub.PublicEntry')),
            ],
            bases=('yighub.thumbnail',),
        ),
        migrations.CreateModel(
            name='TaskforceBoard',
            fields=[
                ('board_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='yighub.Board')),
                ('archive', models.BooleanField(default=False)),
                ('participant', models.ManyToManyField(blank=True, to='yighub.User')),
            ],
            bases=('yighub.board',),
        ),
        migrations.CreateModel(
            name='TaskforceComment',
            fields=[
                ('comment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='yighub.Comment')),
            ],
            bases=('yighub.comment',),
        ),
        migrations.CreateModel(
            name='TaskforceEntry',
            fields=[
                ('entry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='yighub.Entry')),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yighub.TaskforceBoard')),
            ],
            bases=('yighub.entry',),
        ),
        migrations.CreateModel(
            name='TaskforceFile',
            fields=[
                ('file_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='yighub.File')),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='yighub.TaskforceEntry')),
            ],
            bases=('yighub.file',),
        ),
        migrations.CreateModel(
            name='TaskforceThumbnail',
            fields=[
                ('thumbnail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='yighub.Thumbnail')),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thumbnails', to='yighub.TaskforceEntry')),
            ],
            bases=('yighub.thumbnail',),
        ),
        migrations.AddField(
            model_name='photo',
            name='photographer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photographers', to='yighub.User'),
        ),
        migrations.AddField(
            model_name='photo',
            name='recommendation',
            field=models.ManyToManyField(blank=True, related_name='photo_recommendations', to='yighub.User'),
        ),
        migrations.AddField(
            model_name='photo',
            name='tag',
            field=models.ManyToManyField(blank=True, related_name='photos', to='yighub.Tag'),
        ),
        migrations.AddField(
            model_name='memo',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memo_creators', to='yighub.User'),
        ),
        migrations.AddField(
            model_name='letter',
            name='receiver',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='letter_receivers', to='yighub.User'),
        ),
        migrations.AddField(
            model_name='letter',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='letter_senders', to='yighub.User'),
        ),
        migrations.AddField(
            model_name='entry',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entry_creators', to='yighub.User'),
        ),
        migrations.AddField(
            model_name='entry',
            name='recommendation',
            field=models.ManyToManyField(blank=True, related_name='entry_recommendations', to='yighub.User'),
        ),
        migrations.AddField(
            model_name='entry',
            name='tag',
            field=models.ManyToManyField(blank=True, related_name='entrys', to='yighub.Tag'),
        ),
        migrations.AddField(
            model_name='comment',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_creators', to='yighub.User'),
        ),
        migrations.AddField(
            model_name='comment',
            name='recommendation',
            field=models.ManyToManyField(blank=True, related_name='comment_recommendations', to='yighub.User'),
        ),
        migrations.AddField(
            model_name='taskforcecomment',
            name='entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='yighub.TaskforceEntry'),
        ),
        migrations.AddField(
            model_name='publiccomment',
            name='entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='yighub.PublicEntry'),
        ),
        migrations.AddField(
            model_name='photocomment',
            name='photo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='yighub.Photo'),
        ),
        migrations.AddField(
            model_name='bulletincomment',
            name='entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='yighub.BulletinEntry'),
        ),
    ]
